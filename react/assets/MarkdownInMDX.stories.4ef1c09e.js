import{j as e,a as c,F as i}from"./jsx-runtime.531900c9.js";import{u as r,A as m,M as p}from"./Props.16a04797.js";import"./iframe.cb92c9c6.js";import"./string.b9eff9fb.js";import"./es.map.constructor.352c8f1d.js";import"./es.number.to-fixed.3e31350f.js";function s(t){const n=Object.assign({h1:"h1",p:"p"},r(),t.components);return c(i,{children:[e(n.h1,{children:"Test File"}),`
`,e(n.p,{children:"This is a test for Markdown in MDX."})]})}function d(t={}){const{wrapper:n}=Object.assign({},r(),t.components);return n?e(n,Object.assign({},t,{children:e(s,t)})):s(t)}function a(t){return c(i,{children:[e(p,{title:"Examples/Markdown in MDX"}),`
`,e(d,{})]})}function l(t={}){const{wrapper:n}=Object.assign({},r(),t.components);return n?e(n,Object.assign({},t,{children:e(a,t)})):a()}const M=()=>{throw new Error("Docs-only story")};M.parameters={docsOnly:!0};const o={title:"Examples/Markdown in MDX",includeStories:["__page"]},u={};o.parameters=o.parameters||{};o.parameters.docs={...o.parameters.docs||{},page:()=>e(m,{mdxStoryNameToKey:u,mdxComponentAnnotations:o,children:e(l,{})})};const f=["__page"];export{f as __namedExportsOrder,M as __page,o as default};
//# sourceMappingURL=MarkdownInMDX.stories.4ef1c09e.js.map
